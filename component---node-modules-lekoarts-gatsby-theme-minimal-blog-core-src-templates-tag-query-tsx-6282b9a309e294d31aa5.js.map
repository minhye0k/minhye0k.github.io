{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-6282b9a309e294d31aa5.js","mappings":"m1BAAA,CA8BA,IAsBA,EAtBMA,SAAM,GAAGC,IAAAA,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YACpB,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,WAAkBC,EAAlB,WAEA,OACE,kBACE,aAAKC,MAAK,QAAUJ,EADtB,QAEE,cAAMK,GAAI,CAAEC,WAAF,SAAwBC,eAAxB,gBAAyDC,SAAnE,UACE,cAASC,GAAT,KAAiBC,QAAjB,YAAqCL,GAAI,CAAEM,QAA3C,IACGX,EAFL,OAIE,gBACEK,GAAI,0CAAaO,EAAb,2BAAaA,EAAb,OAA0BF,QAA1B,kBAAsDC,QAAtD,GADN,EAEEE,IAAIC,EAAAA,EAAAA,GAAe,IAAD,MAFpB,IANJ,mBAaE,aAASf,MAAT,EAAuBM,GAAI,CAAEU,GAAI,CAAC,EAdtC,MAHF,EC3BA,MCce,SAA4B,GAAKC,IAAAA,EAAgB,oBAEpDC,EACND,EAFJ,aAIA,OAAO,iCAAKjB,MAAOkB,EAAZ,OAAP,GACD,C,0TCQD,IAjBMC,SAAW,GAAGC,IAAAA,EAAsB,EAAtBA,KAClB,GAA+BlB,EAAAA,EAAAA,KAAvBC,EAAR,WAAkBC,EAAlB,WAEA,OACE,QAAC,WAAD,KACGgB,EAAAA,KAAS,qBACR,QAAC,WAAD,CAAgBC,IAAKC,EAArB,QACG,GADH,MAEE,gBAAMhB,GAAI,yB,oWAtBpB,CAsBoB,cAAaO,EAAb,2BAAaA,EAAb,EAAV,EAAuCC,IAAIC,EAAAA,EAAAA,GAAe,IAAD,YAA6BO,EAAtF,OACGA,EAJG,MAFd,IAHF,C,gsBCdA,CAsBA,IAiBA,EAjBMC,SAAe,OAAGC,EAAH,oBAASC,OAAT,gBACnB,cAAKC,GAAL,IACE,gBAAMZ,GAAIU,EAAV,KAAqBlB,GAAI,0CAAaO,EAAb,2BAAaA,EAAb,OAA0Bc,SAAU,CAAC,EAAE,EAAvC,GAA+CC,MAA/C,QAAzB,GACGJ,EAFL,QAIE,aAAGlB,GAAI,CAAEsB,MAAF,YAAsBZ,GAAtB,EAA6Ba,EAAG,CAAED,MAAlC,aAAwDD,SAAU,CAAC,EAAE,EAA5E,MACE,oBAAOH,EADT,MAEGA,EAAAA,MAAAA,IACC,QAAC,WAAD,YAEE,aAAUJ,KAAMI,EAVL,SAArB,ECOA,EARMM,SAAU,OAAG9B,EAAH,sBAAU+B,OAAV,wBAA0BN,OAA1B,gBACd,mBAASnB,GAAI,CAAEoB,GAAI,CAAC,EAAE,EAAtB,IAAgCK,UAAhC,GACG/B,EAAAA,KAAU,mBACT,WAAcqB,IAAKG,EAAnB,KAA8BA,KAA9B,EAA0CC,SADjC,GAFC,IAAhB,C","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/tag.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport Seo from \"./seo\"\n\ntype TagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n}\n\nconst Tag = ({ posts, pageContext }: TagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Seo title={`Tag: ${pageContext.name}`} />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <Link\n          sx={(t) => ({ ...t.styles?.a, variant: `links.secondary`, marginY: 2 })}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </Link>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n","import { graphql } from \"gatsby\"\nimport TagComponent from \"../components/tag\"\n\nexport default TagComponent\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tag from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["Tag","posts","pageContext","useMinimalBlogConfig","tagsPath","basePath","title","sx","alignItems","justifyContent","flexFlow","as","variant","marginY","t","to","replaceSlashes","mt","props","allPost","ItemTags","tags","key","tag","BlogListItem","post","showTags","mb","fontSize","color","a","Listing","className"],"sourceRoot":""}